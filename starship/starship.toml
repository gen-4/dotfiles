format = """
$username$hostname$directory$git_branch$package$docker_context$rust$golang$terraform$python$nodejs$character
"""
right_format = """$git_status$cmd_duration"""
add_newline = false

palette = "custom"



[username]
style_user = "bg:bg fg:white"
style_root = "red bold"
format = "[](bg:none fg:bg)[$user]($style)[](bg:none fg:bg)"
disabled = false
show_always = true

[hostname]
ssh_only = false
format = '[ ]($style)[󰌢 $hostname](bg:bg fg:bold blue-3)[ ]($style)'
style = "bg:none fg:bg"
trim_at = "."
disabled = false

[character]                            # The name of the module we are configuring is "character"
success_symbol = "[](green bold)"
error_symbol = "[](bold red)"
#  
# configure directory

[directory]
format = "[]($style)[ ](bg:bg fg:blue-1)[$path](bg:bg fg:blue-2 bold)[ ]($style)"
style = "bg:none fg:bg"
truncation_length = 3
truncate_to_repo=false

[git_branch]
format = "[]($style)[[ ](bg:bg fg:green bold)$branch](bg:bg fg:white)[ ]($style)"
style = "bg:none fg:bg"

[git_status]
# $all status$ahead_behind
format = "[]($style)[$all_status$ahead_behind](bg:bg fg:blue-2)[ ]($style)"
style = "bg:none fg:bg"
conflicted = "="
ahead =	" ⇡${count}"
behind = " ⇣${count}"
diverged = " ⇕⇡${ahead_count}⇣${behind_count}"
up_to_date = " "
untracked = " ?${count}"
stashed = " 󰆓"
modified = " !${count}"
staged = " +${count}"
renamed = " »${count}"
deleted = "${count}"

[cmd_duration]
min_time = 1
# duration & style 
format = "[[󰔚](bg:none fg:blue-4)$duration](bg:none fg:white)"
disabled = false

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[memory_usage]
symbol = "󰍛 "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = "󰏗 "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]



[palettes.custom]
bg = "#020204"
white = "#DFDFE7"
dark-1 = "#040308"
dark-2 = "#12111E"
dark-3 = "#242337"
dark-4 = "#3D3A58"
blue-1 = "#70B0BC"
blue-2 = "#C3C0E0"
blue-3 = "#78AEB9"
blue-4 = "85DCEC"

